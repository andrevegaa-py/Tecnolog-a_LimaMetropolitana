import streamlit as st
import pandas as pd
import random
import numpy as np
import folium
from streamlit_folium import st_folium

# --- CONFIGURACI√ìN DE LA P√ÅGINA ---
st.set_page_config(page_title="Tecnolog√≠a en Lima Metropolitana", page_icon="üíª", layout="wide")

st.title("üíª Monitoreo del Acceso Tecnol√≥gico en Lima Metropolitana")

st.markdown(
    """
    Esta aplicaci√≥n muestra un **an√°lisis simulado** del **porcentaje de poblaci√≥n con acceso a tecnolog√≠a**
    en los distritos de **Lima Metropolitana**.
    Se compara el acceso entre **2024 y 2025**, mostrando el incremento relativo
    en la adopci√≥n de herramientas tecnol√≥gicas y acceso a internet.
    """
)
st.write("---")

# --- DATOS SIMULADOS ---
distritos = [
    "Lima Cercado", "Miraflores", "San Isidro", "La Molina", "Comas",
    "San Juan de Lurigancho", "San Mart√≠n de Porres", "Villa El Salvador",
    "Ate", "Santiago de Surco", "Callao", "Los Olivos", "Chorrillos",
    "Surquillo", "Barranco", "Magdalena del Mar", "Pueblo Libre", "Jes√∫s Mar√≠a",
    "Lince", "San Borja", "Bre√±a", "San Miguel"
]

acceso_2024 = [random.randint(10, 85) for _ in distritos]
acceso_2025 = [min(t + random.randint(5, 15), 98) for t in acceso_2024]

df = pd.DataFrame({
    "Distrito": distritos,
    "Poblaci√≥n con Acceso Tecnol√≥gico 2024 (%)": acceso_2024,
    "Poblaci√≥n con Acceso Tecnol√≥gico 2025 (%)": acceso_2025
})

df["Incremento Absoluto (%)"] = (
    df["Poblaci√≥n con Acceso Tecnol√≥gico 2025 (%)"] - df["Poblaci√≥n con Acceso Tecnol√≥gico 2024 (%)"]
)

df["Incremento Relativo (%)"] = np.where(
    df["Poblaci√≥n con Acceso Tecnol√≥gico 2024 (%)"] != 0,
    ((df["Incremento Absoluto (%)"] / df["Poblaci√≥n con Acceso Tecnol√≥gico 2024 (%)"]) * 100).round(1),
    0
)

# --- M√âTRICAS GLOBALES ---
st.header("üìä Resumen General del Acceso Tecnol√≥gico")
col1, col2, col3 = st.columns(3)
with col1:
    prom2024 = df['Poblaci√≥n con Acceso Tecnol√≥gico 2024 (%)'].mean()
    st.metric("Promedio 2024", f"{prom2024:.1f}%")
    st.progress(prom2024 / 100)
with col2:
    prom2025 = df['Poblaci√≥n con Acceso Tecnol√≥gico 2025 (%)'].mean()
    st.metric("Promedio 2025", f"{prom2025:.1f}%")
    st.progress(prom2025 / 100)
with col3:
    inc_prom = df['Incremento Relativo (%)'].mean()
    st.metric("Incremento Promedio", f"{inc_prom:.1f}%", delta=f"{inc_prom:.1f}%")

st.write("---")

# --- VISUALIZACI√ìN DE DATOS ---
st.header("üìà Comparativa del Porcentaje de Poblaci√≥n con Acceso Tecnol√≥gico por Distrito")

df_chart = df.set_index("Distrito").sort_values(by="Poblaci√≥n con Acceso Tecnol√≥gico 2025 (%)", ascending=False)
st.bar_chart(df_chart[["Poblaci√≥n con Acceso Tecnol√≥gico 2024 (%)", "Poblaci√≥n con Acceso Tecnol√≥gico 2025 (%)"]], use_container_width=True)

st.write("---")

# --- AN√ÅLISIS POR DISTRITO ---
st.header("üîç An√°lisis Detallado por Distrito")
distrito_sel = st.selectbox("Selecciona un distrito para ver su evoluci√≥n:", df["Distrito"])

if distrito_sel:
    fila = df[df["Distrito"] == distrito_sel].iloc[0]

    st.subheader(f"Datos para {distrito_sel}")
    col_d1, col_d2, col_d3 = st.columns(3)
    with col_d1:
        st.metric("Poblaci√≥n con Acceso 2024", f"{fila['Poblaci√≥n con Acceso Tecnol√≥gico 2024 (%)']:.1f}%")
    with col_d2:
        st.metric("Poblaci√≥n con Acceso 2025", f"{fila['Poblaci√≥n con Acceso Tecnol√≥gico 2025 (%)']:.1f}%",
                  delta=f"{fila['Incremento Absoluto (%)']:.1f} puntos")
    with col_d3:
        st.metric("Incremento Relativo", f"{fila['Incremento Relativo (%)']:.1f}%",
                  delta=f"{fila['Incremento Relativo (%)']:.1f}%")

    st.subheader(f"Progreso en Acceso Tecnol√≥gico en {distrito_sel}")
    st.progress(int(fila['Poblaci√≥n con Acceso Tecnol√≥gico 2025 (%)']))
    st.caption(f"El porcentaje de poblaci√≥n con acceso tecnol√≥gico en {distrito_sel} ha alcanzado un {fila['Poblaci√≥n con Acceso Tecnol√≥gico 2025 (%)']:.1f}% en 2025.")

st.write("---")

# --- MAPA DE CALOR DE ACCESO TECNOL√ìGICO ---
st.header("üó∫Ô∏è Mapa de Calor del Acceso Tecnol√≥gico (2025)")

coords = {
    "Lima Cercado": (-12.0464, -77.0428),
    "Miraflores": (-12.1211, -77.0297),
    "San Isidro": (-12.0982, -77.0344),
    "La Molina": (-12.0833, -76.9333),
    "Comas": (-11.9364, -77.0622),
    "San Juan de Lurigancho": (-11.9941, -76.9983),
    "San Mart√≠n de Porres": (-11.9911, -77.0603),
    "Villa El Salvador": (-12.1972, -76.9361),
    "Ate": (-12.0293, -76.9348),
    "Santiago de Surco": (-12.1392, -76.9814),
    "Callao": (-12.0566, -77.1181),
    "Los Olivos": (-11.9565, -77.0697),
    "Chorrillos": (-12.1758, -77.0165),
    "Surquillo": (-12.1207, -77.0244),
    "Barranco": (-12.1496, -77.0219),
    "Magdalena del Mar": (-12.0933, -77.0667),
    "Pueblo Libre": (-12.0747, -77.0656),
    "Jes√∫s Mar√≠a": (-12.0736, -77.0438),
    "Lince": (-12.0861, -77.0336),
    "San Borja": (-12.1022, -76.9944),
    "Bre√±a": (-12.0561, -77.0497),
    "San Miguel": (-12.0889, -77.0797)
}

m = folium.Map(location=[-12.0464, -77.0428], zoom_start=11)

for _, row in df.iterrows():
    distrito = row["Distrito"]
    acceso = row["Poblaci√≥n con Acceso Tecnol√≥gico 2025 (%)"]
    if distrito in coords:
        color = f"#{int(255 - acceso * 2):02x}{int(acceso * 2):02x}40"  # Rojo‚ÜíVerde
        folium.CircleMarker(
            location=coords[distrito],
            radius=10,
            color=None,
            fill=True,
            fill_color=color,
            fill_opacity=0.7,
            popup=f"{distrito}: {acceso:.1f}%",
        ).add_to(m)

st_data = st_folium(m, width=900, height=500)
st.caption("El color m√°s verde indica mayor acceso tecnol√≥gico en 2025.")
st.write("---")

# --- GR√ÅFICA DE VARIACI√ìN 2022‚Äì2025 ---
st.header("üìÖ Evoluci√≥n del Acceso Tecnol√≥gico (2022‚Äì2025)")

df_variacion = pd.DataFrame({
    "A√±o": [2022, 2023, 2024, 2025],
    "Promedio Acceso (%)": [
        prom2024 - random.uniform(10, 15),
        prom2024 - random.uniform(5, 8),
        prom2024,
        prom2025
    ]
})

st.line_chart(df_variacion.set_index("A√±o"))
st.caption("Tendencia creciente del acceso tecnol√≥gico promedio en Lima Metropolitana (2022‚Äì2025).")

st.write("---")

# --- TABLA DE DATOS COMPLETA ---
st.header("üìã Datos Completos")
st.write("Explora la tabla interactiva de todos los distritos.")

sortable_columns_options = [col for col in df.columns if col != "Distrito"]
default_sort_index = sortable_columns_options.index("Incremento Relativo (%)") if "Incremento Relativo (%)" in sortable_columns_options else 0

sort_column = st.selectbox("Ordenar por:", options=sortable_columns_options, index=default_sort_index)
sort_order = st.radio("Orden:", ("Ascendente", "Descendente"))

sorted_df = df.sort_values(by=sort_column, ascending=(sort_order == "Ascendente"))
st.dataframe(sorted_df, use_container_width=True)

st.write("---")
st.markdown("Desarrollado con ‚ù§Ô∏è en Python y Streamlit")

